run:
  # default concurrency is a available CPU number
  concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 30m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

issues:
  # Which files to exclude: they will be analyzed, but issues from them won't be reported.
  # There is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not, please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # Default: []
  exclude-files:
    - ".*\\_gen\\.go$"

output:
  # Default:
  #   formats:
  #     - format: colored-line-number
  #       path: stdout
  formats:
    - format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

linters-settings:
  goimports:
    # put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: brokersrv
  gocritic:
    # Enable multiple checks by tags, run `GL_DEBUG=gocritic golangci-lint` run to see all tags and checks.
    # Empty list by default. See https://github.com/go-critic/go-critic#usage -> section "Tags".
    enabled-checks:
      - appendCombine
      - boolExprSimplify
      - emptyFallthrough
      - emptyStringTest
      - equalFold
      - hexLiteral
      - indexAlloc
      - nilValReturn
      - yodaStyleExpr

linters:
  enable-all: false
  disable-all: true
  enable:
    - bodyclose
    - dogsled
    - dupl
    - goconst
    - gofmt
    - goimports
    - gosimple
    - gocritic
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unconvert
    - unused
